{"version":3,"sources":["components/LaunchItem.js","components/Launches.js","components/Rocket.js","components/Launch.js","logo.png","App.js","reportWebVitals.js","index.js"],"names":["LaunchItem","launch","id","name","flight_number","date_local","success","rocket","className","format","to","LAUNCHES_QUERY","gql","Launches","useState","results","setResults","useQuery","loading","error","data","useEffect","console","log","launches","onChange","e","bool","temp","filtered","filter","filterResults","target","value","map","ROCKET_QUERY","Rocket","img","setImg","variables","onClick","link","flickr_images","LAUNCH_QUERY","Launch","location","useLocation","pathname","slice","split","details","src","alt","client","ApolloClient","uri","cache","InMemoryCache","App","ApolloProvider","logo","style","width","display","margin","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.75f5d40a.chunk.js","sourcesContent":["import React from 'react';\n// import classNames from 'classnames';\nimport Moment from 'react-moment';\nimport { Link } from 'react-router-dom';\nimport '../App.css'\n\nconst LaunchItem = ({ launch: { id, flight_number, name, date_local, success, rocket } }) => {\n    \n    return (\n        <div className=\"card card-body mb-3\">\n            <div className=\"row\">\n                <div className=\"col md-9\">\n                    <h4>Mission: <span className={success ? 'text-success' : success === false ? 'text-danger' : ''}>{name}</span></h4>\n                    <p>Date: <Moment format=\"MM/DD/YYYY\">{date_local}</Moment></p>\n                </div>\n                <div className=\"col md-3 launches\">\n                    <Link to={`/launch/${id}`} className=\"btn btn-secondary\">Launch Details</Link>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default LaunchItem","import React, { useState, useEffect } from 'react';\nimport {\n  useQuery,\n  gql\n} from \"@apollo/client\";\nimport LaunchItem from './LaunchItem';\n\nconst LAUNCHES_QUERY = gql`\n  query LaunchesQuery {\n    launches {\n        id\n        flight_number\n        name\n        date_local\n        success\n        rocket\n    }\n  }\n`;\n\n\nconst Launches = () => {\n    const [results, setResults] = useState([])\n    const { loading, error, data } = useQuery(LAUNCHES_QUERY);\n    // console.log('loading', loading);\n    // console.log('error', error);\n    // console.log('data', data);\n\n    useEffect(() => {\n      if(data) {\n        console.log(\"here's the data\", data)\n        setResults(data.launches)\n      }\n    }, [data])\n\n    const filterResults = (bool) => {\n      console.log('bool', bool)\n      const temp = data.launches;\n\n      if (bool === 'success') {\n        const filtered = temp.filter(launch => launch.success)\n        setResults(filtered)\n      }\n\n      if (bool === 'fail') {\n        const filtered = temp.filter(launch => !launch.success && launch.success !== null)\n        setResults(filtered)\n      }\n\n      if (bool === 'reset') {\n        setResults(temp)\n      }\n    }\n\n    if (loading) return <p>Loading...</p>\n    if (error) return <p>Error: {error}</p>\n    \n    return (\n        <div>\n            <h1 className=\"display-4 my-3\">Launches</h1>\n            <div className=\"my-3\">\n              <select onChange={(e) => filterResults(e.target.value)}>\n                <option value=\"reset\">- Mission Status -</option>\n                <option value=\"success\">Success</option>\n                <option value=\"fail\">Fail</option>\n              </select>\n            </div>\n            {\n                results?.map((launch) => {\n                  return <LaunchItem key={launch.flight_number} launch={launch}/>\n                })\n            }\n        </div>\n    )\n}\n\nexport default Launches\n","import React from 'react';\nimport {\n  useQuery,\n  gql\n} from \"@apollo/client\";\n\nimport '../App.css'\n\nconst ROCKET_QUERY = gql`\n        query RocketQuery($id: String!) {\n            rocket(id: $id) {\n                type\n                name\n                description\n                flickr_images\n            }\n        }\n    `;\n\n\n\nconst Rocket = ({ id, img, setImg }) => {\n    const { loading, error, data } = useQuery(ROCKET_QUERY, {\n    variables: { id }});\n    console.log('loading', loading);\n    console.log('error', error);\n    console.log('data', data);\n    console.log('rocketId', id)\n\n\n    const openImage = (link) => {\n        if (img) {\n            setImg('')\n        } else {\n            setImg(link)\n        }\n}\n\n    return (\n        <div>\n            <span className=\"text-primary rocket-name\" onClick={() => openImage(data?.rocket.flickr_images[0])}>{data?.rocket.name}</span>\n        </div>\n    )\n}\n\nexport default Rocket\n","import React, { useState } from 'react';\nimport {\n  useQuery,\n  gql\n} from \"@apollo/client\";\nimport { Link, useLocation } from 'react-router-dom';\nimport Moment from 'react-moment';\n\nimport Rocket from './Rocket';\nimport '../App.css';\n\n\n\nconst LAUNCH_QUERY = gql`\n  query LaunchQuery($id: String!) {\n    launch(id: $id) {\n        id\n        flight_number\n        name\n        date_local\n        success\n        rocket\n        details\n    }\n  }\n`;\n\nconst Launch = () => {\n    const [img, setImg] = useState('');\n    const location = useLocation();\n    console.log('location', location)\n    const id = location.pathname.slice(1).split('/')[1];\n    console.log('id', id)\n    const { loading, error, data } = useQuery(LAUNCH_QUERY, {\n    variables: { id }});\n    console.log('loading', loading);\n    console.log('error', error);\n    console.log('data', data);\n\n    if (loading) return <p>Loading...</p>\n    if (error) return <p>Error</p>\n    \n    const { name, flight_number, date_local, success, rocket, details } = data.launch;\n\n    return (\n        <div className=\"launch-details\">\n            <h1 className=\"display-4 my-3\"><span className=\"text-dark\">Mission:</span> {name}</h1>\n            <h4 className=\"mb-3\">Launch Details</h4>\n            <ul className=\"list-group\">\n                <li className=\"list-group-item\">Flight Number: {flight_number}</li>\n                <li className=\"list-group-item\">Launch Year: <Moment format=\"YYYY\">{date_local}</Moment></li>\n                <li className=\"list-group-item\"><span className=\"rocket-info\">Rocket:&nbsp;<Rocket id={rocket} img={img} setImg={setImg}/></span></li>\n                \n                <li className=\"list-group-item\">Launch Successful: <span className={success ? 'text-success' : success === false ? 'text-danger' : ''}>{success ? 'Yes' : success === false ? 'No' : 'N/A'}</span></li>\n                <li className=\"list-group-item\">Details: <em>{details}</em></li>\n            </ul>\n            <div className=\"rocket-image-container mb-3\">\n                {\n                    img ? <img className=\"rocket-image\" src={img} alt=\"rocket\"/> : null\n                }\n            </div>\n            <Link to=\"/\" className=\"btn btn-secondary\">Back</Link>\n        </div>\n    )\n}\n\nexport default Launch\n","export default __webpack_public_path__ + \"static/media/logo.3bbfc0cc.png\";","import React from 'react';\nimport {\n  ApolloClient,\n  InMemoryCache,\n  ApolloProvider,\n} from \"@apollo/client\"; \nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport Launches from './components/Launches';\nimport Launch from './components/Launch';\nimport Rocket from './components/Rocket';\nimport './App.css';\nimport logo from './logo.png';\n\nconst client = new ApolloClient({\n  uri: '/graphql',\n  cache: new InMemoryCache()\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Router>\n          <div className=\"container\">\n          <Link to=\"/\"><img src={logo} alt=\"SpaceX\" style={{ width: 300, display: 'block', margin: 'auto' }} /></Link>\n          <Route exact path=\"/\"><Launches /></Route>\n          <Route exact path=\"/launch/:flight_number\"><Launch /></Route>\n          <Route exact path=\"/rocket\"><Rocket id=\"5e9d0d95eda69973a809d1ec\" /></Route>\n        </div>\n      </Router>\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}